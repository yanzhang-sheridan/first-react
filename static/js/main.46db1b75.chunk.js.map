{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","charData","map","row","index","key","name","job","onClick","removeChars","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","handleSubmit","this","htmlFor","type","id","onChange","Component","App","chars","filter","character","i","className","ReactDOM","render","document","getElementById"],"mappings":"sNAEMA,EAAY,WACd,OACI,+BACE,4BACE,oCACA,mCACA,yCAONC,EAAU,SAACC,GACb,IAAMC,EAAOD,EAAME,SAASC,KAAI,SAACC,EAAIC,GACjC,OACI,wBAAIC,IAAOD,GACP,4BAAKD,EAAIG,MACT,4BAAKH,EAAII,KACT,4BACI,4BAAQC,QAAS,kBAAIT,EAAMU,YAAYL,KAAvC,eAMhB,OAAO,+BAAQJ,IAeJU,EAXD,SAACX,GAAW,IACfE,EAAyBF,EAAzBE,SAAUQ,EAAeV,EAAfU,YACjB,OACE,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAWR,SAAUA,EAAUQ,YAAaA,M,OCGrCE,E,4MArCXC,aAAe,CACXN,KAAK,GACLC,IAAI,I,EAGRM,MAAQ,EAAKD,a,EAEbE,aAAe,SAAAC,GAAQ,IAAD,EACGA,EAAMC,OAApBV,EADW,EACXA,KAAKW,EADM,EACNA,MACZ,EAAKC,SAAL,eACKZ,EAAMW,K,EAIfE,WAAa,WACT,EAAKpB,MAAMqB,aAAa,EAAKP,OAC7B,EAAKK,SAAS,EAAKN,e,uDAGd,IAAD,EACeS,KAAKR,MAAjBP,EADH,EACGA,KAAKC,EADR,EACQA,IACZ,OACI,8BACI,2BAAOe,QAAQ,QAAf,QACA,2BAAOC,KAAK,OAAOjB,KAAK,OAAOkB,GAAG,OAAOP,MAAOX,EAChDmB,SAAUJ,KAAKP,eACf,2BAAOQ,QAAQ,OAAf,OACA,2BAAOC,KAAK,OAAOjB,KAAK,MAAMkB,GAAG,MAAMP,MAAOV,EAC9CkB,SAAUJ,KAAKP,eACf,2BAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,kB,GA9B/CO,aC+BJC,E,4MA5BXd,MAAQ,CACJe,MAAQ,I,EAGZnB,YAAc,SAAAL,GAAQ,IACXwB,EAAS,EAAKf,MAAde,MACP,EAAKV,SAAS,CACVU,MAAMA,EAAMC,QAAO,SAACC,EAAUC,GAC1B,OAAOA,IAAI3B,Q,EAKvBgB,aAAe,SAAAU,GACX,EAAKZ,SAAS,CAACU,MAAM,GAAD,mBAAK,EAAKf,MAAMe,OAAhB,CAAsBE,O,uDAErC,IACEF,EAASP,KAAKR,MAAde,MAEP,OACI,yBAAKI,UAAU,aACX,kBAAC,EAAD,CAAO/B,SAAU2B,EAAOnB,YAAaY,KAAKZ,cAC1C,kBAAC,EAAD,CAAMW,aAAcC,KAAKD,oB,GAvBvBM,aCGlBO,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,eAAe,U","file":"static/js/main.46db1b75.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst TableHeader=()=>{\r\n    return (\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Job</th>\r\n            <th>Remove</th>\r\n          </tr>\r\n        </thead>\r\n\r\n    )\r\n}\r\n\r\nconst TableBody=(props)=>{\r\n    const rows = props.charData.map((row,index) => {\r\n        return (\r\n            <tr key = {index}>\r\n                <td>{row.name}</td>\r\n                <td>{row.job}</td>\r\n                <td>\r\n                    <button onClick={()=>props.removeChars(index)}>DELETE</button>\r\n                </td>\r\n\r\n            </tr>\r\n        )\r\n    })\r\n    return <tbody>{rows}</tbody>\r\n}\r\n\r\n\r\nconst Table = (props) => {\r\n    const {charData, removeChars} = props\r\n    return (\r\n      <table>\r\n        <TableHeader/>\r\n        <TableBody charData={charData} removeChars={removeChars}/>\r\n      </table>\r\n    )\r\n  \r\n}\r\n\r\nexport default Table","import React, {Component} from 'react'\r\n\r\nclass Form extends Component {\r\n    initialState = {\r\n        name:'',\r\n        job:'',\r\n    }\r\n\r\n    state = this.initialState\r\n\r\n    handleChange = event=>{\r\n        const {name,value} = event.target\r\n        this.setState({\r\n            [name]:value\r\n        })\r\n    }\r\n\r\n    submitForm = ()=>{\r\n        this.props.handleSubmit(this.state)\r\n        this.setState(this.initialState)\r\n    }\r\n\r\n    render(){\r\n        const {name,job} = this.state;\r\n        return(\r\n            <form>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" name=\"name\" id=\"name\" value={name}\r\n                onChange={this.handleChange} />\r\n                <label htmlFor=\"job\">Job</label>\r\n                <input type=\"text\" name=\"job\" id=\"job\" value={job}\r\n                onChange={this.handleChange} />\r\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n            </form>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Form\r\n","import React, {Component} from 'react'\r\nimport Table from './Table'\r\nimport Form from './Form'\r\n\r\nclass App extends Component {\r\n    state = {\r\n        chars : [],\r\n\r\n    }\r\n    removeChars = index=>{\r\n        const {chars} = this.state\r\n        this.setState({\r\n            chars:chars.filter((character,i)=>{\r\n                return i!==index\r\n            })\r\n        })\r\n\r\n    }\r\n    handleSubmit = character=>{\r\n        this.setState({chars:[...this.state.chars,character]})\r\n    }\r\n    render(){\r\n        const {chars} = this.state\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Table charData={chars} removeChars={this.removeChars}/>\r\n                <Form handleSubmit={this.handleSubmit} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}